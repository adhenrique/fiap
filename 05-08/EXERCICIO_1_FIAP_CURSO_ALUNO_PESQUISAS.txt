--EXERCICIO 1- CRIAR PROGRAMA QUE SELECIONE E APRESENTE CURSOS E 
-- RESPECTIVOS ALUNO

DROP TABLE CURSO CASCADE CONSTRAINTS;
DROP TABLE ALUNO CASCADE CONSTRAINTS;
CREATE TABLE CURSO(ID_CURSO NUMBER(9) PRIMARY KEY, NOME_CURSO VARCHAR2(15) 
NOT NULL) TABLESPACE VENDAS1;
CREATE TABLE ALUNO(ID_ALUNO NUMBER(10) PRIMARY KEY, NOME_ALUNO VARCHAR2(12)
NOT NULL) TABLESPACE VENDAS1;
ALTER TABLE CURSO ADD VALOR_CURSO NUMBER(10,2) NOT NULL;
ALTER TABLE ALUNO ADD ID_CURSO NUMBER(9) REFERENCES CURSO;

SELECT * FROM CURSO;
SELECT * FROM ALUNO;
DESC ALUNO;

INSERT  INTO CURSO (ID_CURSO, NOME_CURSO, VALOR_CURSO) VALUES (1, 'MATEMATICA', 1200);
INSERT INTO CURSO (ID_CURSO, NOME_CURSO, VALOR_CURSO) VALUES (2, 'QUIMICA', 1100);
INSERT  INTO CURSO (ID_CURSO, NOME_CURSO, VALOR_CURSO) VALUES (3, 'TDS', 1000);
INSERT  INTO ALUNO (ID_ALUNO, NOME_ALUNO,ID_CURSO) VALUES (100, 'JOSE FRIAS',1);
INSERT  INTO ALUNO (ID_ALUNO, NOME_ALUNO,ID_CURSO) VALUES (101, 'LUIZ RUAS',1);
INSERT  INTO ALUNO (ID_ALUNO, NOME_ALUNO,ID_CURSO) VALUES (102, 'PAULO BARB',3);
INSERT  INTO ALUNO (ID_ALUNO, NOME_ALUNO,ID_CURSO) VALUES (103, 'RODRIGO GAL',3);
INSERT  INTO ALUNO (ID_ALUNO, NOME_ALUNO,ID_CURSO) VALUES (104, 'AMANDA CAR ',3);
INSERT  INTO ALUNO (ID_ALUNO, NOME_ALUNO,ID_CURSO) VALUES (105, 'LUCIA AM',3);


1) SELECIONE OS CURSOS SEM ALUNO
SELECT * FROM CURSO WHERE ID_CURSO NOT IN (SELECT ID_CURSO FROM ALUNO);
2) SELECIONE CURSOS E RESPECTIVOS ALUNOS ( CURSO SEM ALUNO NAO APARECERA)
SELECT * FROM CURSO INNER JOIN ALUNO ON CURSO.ID_CURSO=ALUNO.ID_CURSO;
3) SELECIONE TODOS OS CURSOS E RESPECTIVOS ALUNOS
SELECT * FROM CURSO LEFT OUTER JOIN ALUNO ON CURSO.ID_CURSO=ALUNO.ID_CURSO;
4) SELECIONE TODOS OS CURSOS E TODOS OS ALUNOS
SELECT * FROM CURSO FULL OUTER JOIN ALUNO ON CURSO.ID_CURSO=ALUNO.ID_CURSO;
5) SELECIONE CURSOS QUE CUSTEM ABAIXO DE 1100 REAIS
SELECT * FROM CURSO WHERE VALOR_CURSO < 1100;
6) SELECIONE CURSOS E ALUNOS CUJOS CURSOS ESTEJAM ACIMA DA MEDIA
SELECT * FROM CURSO WHERE VALOR_CURSO > (SELECT AVG(VALOR_CURSO) FROM CURSO);
7) SELECIONE CURSOS QUE TENHAM ALUNOS
SELECT * FROM CURSO WHERE ID_CURSO IN (SELECT ID_CURSO FROM ALUNO);
8) SELECIONE ALUNOS DE MATEMATICA
SELECT * FROM ALUNO WHERE ID_CURSO=1;
9) SELECIONE ALUNOS CUJO CURSO CUSTE ENTRE 1100 E 1400
SELECT * FROM CURSO INNER JOIN ALUNO ON CURSO.ID_CURSO=ALUNO.ID_CURSO 
WHERE CURSO.VALOR_CURSO BETWEEN 1100 AND 1400;
10) APRESENTE O CURSO MAIS CARO
SELECT * FROM CURSO WHERE VALOR_CURSO = (SELECT MAX(VALOR_CURSO) FROM CURSO);
11) APRESENTE O CURSO MAIS BARATO
SELECT * FROM CURSO WHERE VALOR_CURSO = (SELECT MIN(VALOR_CURSO) FROM CURSO);
12) CONSTRUA UM BLOCO UM PROGRAMA PL-SQL QUE ATRAVES DE UM CURSOR APRESENTE
    OS CURSOS E RESPECTIVOS ALUNOS
    
-----------------------------------------------------------------------------
--EXERCICIO 2
CREATE TABLE DEPT(DEPTNO NUMBER(5) PRIMARY KEY, DNAME VARCHAR2(15)
NOT NULL);
CREATE TABLE EMP( EMPNO NUMBER(6) CONSTRAINT 
EMP_NUMERO_PK PRIMARY KEY, ENAME VARCHAR2(15)
NOT NULL, SAL NUMBER(10,2));

ALTER TABLE EMP ADD DEPTNO NUMBER(5) REFERENCES DEPT; 
INSERT INTO DEPT VALUES(1,'contabilidade');
INSERT INTO DEPT VALUES(2,'TI');
INSERT INTO EMP VALUES(100,'LUIZ CARDOSO',1000,1);
INSERT INTO EMP VALUES(101,'CARLOS VERDES',2000,1);
INSERT INTO EMP VALUES(102,'MARISA FRANCA',3000,1);
INSERT INTO EMP VALUES(103,'CARLA RIBEIRO',2800,1);


--CURSDOR EXPLICITO BUSCANDO DADOS DE DEPTO E EMPREGADO
set serveroutput on
DECLARE
  VEMP EMP.EMPNO%TYPE;
  VNOME EMP.ENAME%TYPE;
  VSAL EMP.SAL%TYPE;
  VDEPT DEPT.DEPTNO%TYPE;
  VDEPNOME DEPT.DNAME%TYPE;
 ------CRIE O CURSOR QUE ATENDA ESSES RESULTADOS-----
BEGIN
   OPEN PESQUISA_EMP;
   LOOP 
     FETCH PESQUISA_EMP INTO VDEPT,VDEPNOME,VEMP,VNOME,VSAL;
     EXIT WHEN PESQUISA_EMP%NOTFOUND;
     DBMS_OUTPUT.PUT_LINE('NÚMERO DEPTO:' || VDEPT);
     DBMS_OUTPUT.PUT_LINE('NOME DEPTO:' || VDEPNOME);
     DBMS_OUTPUT.PUT_LINE('NÚMERO EMPREGADO:' || VEMP);
     DBMS_OUTPUT.PUT_LINE('NOME EMPREGADO:' || VNOME);
     DBMS_OUTPUT.PUT_LINE('SALARIO EMPREGADO:' || VSAL);
   END LOOP;
   CLOSE PESQUISA_EMP;
END;
/

-----------------------------------------------------------------
--EXERCICIO 3
-- ABAIXO SÃO CRIADAS AS TABELAS FILIAL E CLIENTE SENDO QUE 
-- UM CLIENTE SÓ PODE PERTENCER A UMA FILIAL MAS UMA FILIAL PODE 
--TER MUITOS CLIENTES. 
--APENAS PARA FACILITAR FIZEMOS A INSERÇÃO DOS DADOS COM SQL 
-- MAS PODERIAMOS TER CRIADO O PROGRAMA DE INSERÇÃO, ATUALIZAÇÃO E 
--ELIMINAÇÃO EM PL SQL.
-- 1) BASEADO NAS TABELAS ABAIXO, CRIE UM PROGRAMA PL-SQL QUE
-- SELECIONE TODOS AS FILIAIS E SEUS RESPECTIVOS CLIENTES
-- 2) CRIE UM PROGRAMA PL-SQL QUE SELECIONE A FILIAL 1000 E SEUS
-- RESPECTIVOS CLIENTES
DROP TABLE FILIAL CASCADE CONSTRAINTS;
DROP TABLE CLIENTE CASCADE CONSTRAINTS;
--1)
create table filial (id_filial number(7) constraint fil_id_pk primary key,
nome_cliente varchar2(15) constraint fil_nome_nn not null,CIDADE
varchar2(15) CONSTRAINT FIL_CIDADE_NN NOT NULL, ESTADO VARCHAR(2)
CONSTRAINT FIL_EST_NN NOT NULL);


CREATE TABLE CLIENTE(ID_CLIENTE NUMBER(7) CONSTRAINT CLI_ID_PK PRIMARY KEY,
                    NOME_CLIENTE VARCHAR2(15) CONSTRAINT CLI_NOME_NN NOT NULL,
                    TELEFONE VARCHAR(10),
                    ENDERECO VARCHAR2(15) CONSTRAINT CLI_END_NN NOT NULL,
                    TIPO_CLIENTE CHAR(1) CONSTRAINT CLI_TIPO_CK CHECK
                    (TIPO_CLIENTE='J' OR TIPO_CLIENTE='F'), 
                    ID_FILIAL NUMBER(5) CONSTRAINT CLI_ID_FK 
                    REFERENCES FILIAL);
--2)                   
INSERT INTO FILIAL VALUES(1000,'FORTALEZA','FORT','CE');
INSERT INTO FILIAL VALUES(1001,'SÃO PAULO','SPO','SP');
INSERT INTO FILIAL VALUES(1002,'RIO DE JANEIRO','RJO','RJ');
INSERT INTO FILIAL VALUES(1003,'SANTOS','STOS','SP');
INSERT INTO FILIAL VALUES(1004,'PARANÁ','PRA','PR');

--3)
INSERT INTO CLIENTE(ID_CLIENTE,NOME_CLIENTE,TELEFONE,ENDERECO,TIPO_CLIENTE,
ID_FILIAL)
VALUES(100,'RUAS_RUAS','87878787','RUA X, 12','J',1000);
INSERT INTO CLIENTE(ID_CLIENTE,NOME_CLIENTE,TELEFONE,ENDERECO,TIPO_CLIENTE,
ID_FILIAL)
VALUES(101,'XYZ CIA','999999','RUA Z, 10','J',1000);
INSERT INTO CLIENTE(ID_CLIENTE,NOME_CLIENTE,TELEFONE,ENDERECO,TIPO_CLIENTE,
ID_FILIAL)
VALUES(102,'NOVELO E CIA','666666','RUA Y, 12','J',1001);
INSERT INTO CLIENTE(ID_CLIENTE,NOME_CLIENTE,TELEFONE,ENDERECO,TIPO_CLIENTE,
ID_FILIAL)
VALUES(103,'JOSE LUIZ','66666','RUA A, 12','F',1001);
INSERT INTO CLIENTE(ID_CLIENTE,NOME_CLIENTE,TELEFONE,ENDERECO,TIPO_CLIENTE,
ID_FILIAL)
VALUES(104,'PAULO SANTOS','555555','RUA B, 12','F',1002);
INSERT INTO CLIENTE(ID_CLIENTE,NOME_CLIENTE,TELEFONE,ENDERECO,TIPO_CLIENTE,
ID_FILIAL)
VALUES(105,'MeM','33333','RUA K, 12','J',1003);
INSERT INTO CLIENTE(ID_CLIENTE,NOME_CLIENTE,TELEFONE,ENDERECO,TIPO_CLIENTE,
ID_FILIAL)
VALUES(106,'pEp','22222','RUA BB, 10','J',1003);
INSERT INTO CLIENTE(ID_CLIENTE,NOME_CLIENTE,TELEFONE,ENDERECO,TIPO_CLIENTE,
ID_FILIAL)
VALUES(107,'ZHZ','65787','RUA ABA, 8','J',1004);
INSERT INTO CLIENTE(ID_CLIENTE,NOME_CLIENTE,TELEFONE,ENDERECO,TIPO_CLIENTE,
ID_FILIAL)
VALUES(108,'NOEL SILVA','81213','RUA ABA, 10','F',1004);
INSERT INTO CLIENTE(ID_CLIENTE,NOME_CLIENTE,TELEFONE,ENDERECO,TIPO_CLIENTE,
ID_FILIAL)
VALUES(109,'ULA ULA','44444','RUA TATA, 8','J',1002);
INSERT INTO CLIENTE(ID_CLIENTE,NOME_CLIENTE,TELEFONE,ENDERECO,TIPO_CLIENTE,
ID_FILIAL)
VALUES(110,'NANA E CIA','898989','RUA POPO, 10','J',1004);






